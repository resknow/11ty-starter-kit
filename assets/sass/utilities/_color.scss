@use '../config' as *;
@use '../functions' as *;
@use 'sass:math';

@if (config('utilities.color', true)) {
	@layer utilities {
		@each $token, $value in token('color') {
			.c-#{$token} {
				--color-opacity: 1;
				color: rgba($value, var(--color-opacity));
			}

			.bg-#{$token} {
				--bg-opacity: 1;
				background-color: rgba($value, var(--bg-opacity));
			}
		}

		@if (config('utilities.opacity')) {
			@for $i from 1 through 10 {
				.c-opacity-#{$i} {
					--color-opacity: #{math.div($i, 10)};
				}

				.bg-opacity-#{$i} {
					--bg-opacity: #{math.div($i, 10)};
				}
			}
		}

		@if (config('utilities.color.responsiveVariants')) {
			@each $breakpoint, $value in token('breakpoints') {
				@media (min-width: $value) {
					@each $token, $value in token('color') {
						.#{$breakpoint}\:c-#{$token} {
							--color-opacity: 1;
							color: rgba($value, var(--color-opacity));
						}

						.#{$breakpoint}\:bg-#{$token} {
							--bg-opacity: 1;
							background-color: rgba($value, var(--bg-opacity));
						}
					}

					@if (config('utilities.opacity.responsiveVariants')) {
						@for $i from 1 through 10 {
							.#{$breakpoint}\:c-opacity-#{$i} {
								--color-opacity: #{math.div($i, 10)};
							}

							.#{$breakpoint}\:bg-opacity-#{$i} {
								--bg-opacity: #{math.div($i, 10)};
							}
						}
					}
				}
			}
		}
	}
}
